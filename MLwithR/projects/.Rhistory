qnorm(0.5,1,1)
qgamma(0.5,1,2)
qexp(0.5,2)
qweibull(0.5,2,2)
qlnorm(0.5,1,2)
qlogis(0.5,2,3)
qllog(0.5,2,3)
qllog(0.5,0,1)
qlogis(0.5,0,1)
qllog
utils:::menuInstallPkgs()
qllog(0.5,2,3)
qllog
rllog
q()
q()
x=c(1,2)
x
x[1]
x[2]
t=c(1,2,3,4)
sum(t^2)
sum(t^1.5)
length(t)
e
t
log(t)
sum(log(t))
t
t^2
log(t)
t^2*log(t)
sum(t^2*log(t))
t
t1=c(5,6,7,8)
colbind(t,t1)
cbind(t,t1)
solve
a=c(1,0)
b=c(0,2)
c=rbind(a,b)
c
solve(c)
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
source('C:/Users/stan/Dropbox/Survival analysis/Newton_Rapson.R')
install.packages("knitr")
```
install.packages("caret")
install.packages("caret")
test  <- read_csv("C:\\Users\\stan\\Downloads\\test.csv\\test.csv")
library(dplyr)
source('C:/Users/stan/Dropbox/kaggle/sample2.R', echo=TRUE)
install.packages("randomForest")
source('C:/Users/stan/Dropbox/kaggle/sample2.R', echo=TRUE)
setwd("C:/Users/stan/Dropbox/coursera/practical machine learning/projects")
clc
source('C:/Users/stan/Dropbox/coursera/practical machine learning/projects/pml.R', echo=TRUE)
mytrain
summary(mytrain)
mytrain$user_name
feature.names
class(mytrain[["user_name"]])
mytrain <- read.csv("pml-training.csv");
class(mytrain[["user_name"]])
mytrain<-mytrain$user_name
mytrain
mytrain <- read.csv("pml-training.csv");
mytrain
a=seq(1:10)
a
a[1,3,5]
a[c(1,3,5)]
mytrain<-mytrain[,feature.names]
mytrain
mytrain <- read.csv("pml-training.csv");
summary(mytrain)
mytrain<-mytrain[,c(1,2)]
mytrain
summary(mytrain)
clc
mytrain <- read.csv("pml-training.csv");
summary(mytrain)
mytrain <- read.csv("pml-training.csv");
mytrain <- mytrain[,names(mytrain)[c("user_name")]];
names(mytrain)
names(mytrain)[,c("user_name")]
mytrain <- mytrain$c("user_name")
mytrain <- mytrain$user_name
mytrain <- mytrain[,"user_name"]
mytrain <- mytrain[,"user_name"]
clc
mytrain <- read.csv("pml-training.csv");
feature.names <- names(mytrain)[2:ncol(mytrain)-1]
mytrain[,feature.names]
mytrain[,feature.names]
feature.names<-names(myrain)[c(1,3)]
feature.names<-names(mytrain)[c(1,3)]
mytrain[,feature.names]
names(mytrain)
clc
feature.names<-c("user_name","classe")
mytrain[,feature.names]
feature.names<-c("user_name","classe")
clc
clear
mytrain <- read.csv("pml-training.csv");
summary(mytrain)
clear
clc
mytrain <- read.csv("pml-training.csv");
summary(mytrain)
total_accel_armroll_dumbbell
clc
source('C:/Users/stan/Dropbox/coursera/practical machine learning/projects/pml.R', echo=TRUE)
source('C:/Users/stan/Dropbox/coursera/practical machine learning/projects/pml.R', echo=TRUE)
source('C:/Users/stan/Dropbox/coursera/practical machine learning/projects/pml.R', echo=TRUE)
predictions <-predict(modelFit,newdata=testing);
confusionMatrix(predictions,testing$classe);
predictions
clc
predictions <-predict(modelFit,newdata=mytest);
predictions
dim(predictions)
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(predictions);
predictions[15]
